worker_processes auto;
events { worker_connections 4096; }

http {

  # resolver 10.89.0.1 valid=30s ipv6=off;  # Podman DNS (컨테이너 resolv.conf 참고)
  resolver 127.0.0.11 valid=30s ipv6=off; # docker DNS

  log_format fcfs '$msec $request $status $request_time $upstream_response_time '
                  '$request_id $remote_addr $http_x_forwarded_for';
  access_log /var/log/nginx/access.log fcfs;

  real_ip_header X-Forwarded-For;
  set_real_ip_from 0.0.0.0/0;

  lua_package_path '/etc/openresty/lua/?.lua;/usr/local/openresty/lualib/?.lua;;';
  lua_shared_dict lua_cache 1m;

  map $host $backend_upstream {
    default http://backend:5800;
  }

  limit_req_zone $binary_remote_addr zone=fcfs:10m rate=5r/s;

  # ===== CORS allowlist (개발 기본: localhost/127.0.0.1) ======================
  map $http_origin $cors_origin {
    default "";
    "~^https?://localhost(:\d+)?$"    $http_origin;
    "~^https?://127\.0\.0\.1(:\d+)?$" $http_origin;
    # 배포 시 예: "~^https?://app\.example\.com$" $http_origin;
  }
  # ===========================================================================

  server {
    listen 80;

    # ---------------- FCFS 예약 엔드포인트 ----------------
    location = /fcfs/join {
      limit_req zone=fcfs burst=30 nodelay;

      # ---- CORS 헤더 ----
      if ($cors_origin != "") {
        add_header Access-Control-Allow-Origin  $cors_origin always;
        add_header Vary                         Origin always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-User-Id" always;
        add_header Access-Control-Max-Age       1728000 always;
        # 노출 필요 시 해제:
        # add_header Access-Control-Expose-Headers "X-Fcfs-Seq" always;
      }

      # ---- 프리플라이트 빠른 종료 ----
      if ($request_method = OPTIONS) {
        add_header Content-Type  "text/plain; charset=utf-8" always;
        add_header Content-Length 0 always;
        return 204;
      }

      # ---- Gateway 접근 제어 / 라우팅 ----
      access_by_lua_block {
        local redis_env = require 'redis_env'
        redis_env.process_request()
      }

      proxy_set_header Host               $host;
      proxy_set_header X-Request-Id       $request_id;
      proxy_set_header X-Real-IP          $realip_remote_addr;
      proxy_set_header X-User-Id          $http_x_user_id;
      proxy_set_header X-Gateway-Version  1;
      proxy_http_version 1.1;
      proxy_set_header Connection "";

      # 문서 기준으로 내부 백엔드 경로도 /fcfs/join 로 정정
      proxy_pass $backend_upstream/fcfs/join;

      # body_filter_by_lua_block / header_filter_by_lua_block 그대로 유지 시 여기에...
    }

    # ------------- Health endpoints ----------------
    location = /health  { default_type text/plain; return 200 "ok\n"; }
    location = /healthz { default_type text/plain; return 200 "ok\n"; }

    # ------------- Redis debug ---------------------
    location = /redis-test  { content_by_lua_file /etc/openresty/lua/redis_test.lua; }
    location = /redis-debug { content_by_lua_file /etc/openresty/lua/redis_debug.lua; }

    # ✅ 정확 일치: /api/v1/seats  (리다이렉트 없이 내부 프록시)
    location = /api/v1/seats {
      # --- CORS (필요 시 Origin allowlist map 유지) ---
      if ($cors_origin != "") {
        add_header Access-Control-Allow-Origin  $cors_origin always;
        add_header Vary                         Origin always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-User-Id" always;
        add_header Access-Control-Max-Age       1728000 always;
      }
      if ($request_method = OPTIONS) {
        add_header Content-Type  "text/plain; charset=utf-8" always;
        add_header Content-Length 0 always;
        return 204;
      }

      # --- 프록시 ---
      proxy_set_header Host               $host;
      proxy_set_header X-Request-Id       $request_id;
      proxy_set_header X-Real-IP          $realip_remote_addr;
      proxy_set_header X-Admin-Token      $http_x_admin_token;
      proxy_set_header X-Gateway-Version  1;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_pass $backend_upstream/api/v1/seats/;  # ← 내부에서 슬래시 붙여 전달
    }

# 기존 목록 유지: /api/는 그대로 패스스루
    location /api/ {
      # (여기엔 기존 CORS/OPTIONS/프록시 설정 유지)
      proxy_set_header Host               $host;
      proxy_set_header X-Request-Id       $request_id;
      proxy_set_header X-Real-IP          $realip_remote_addr;
      proxy_set_header X-Admin-Token      $http_x_admin_token;
      proxy_set_header X-Gateway-Version  1;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_pass $backend_upstream;
    }
  }
}